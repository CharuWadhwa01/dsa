#include<iostream>
using namespace std;
class Queue{
    public:
    int front=-1;
    int rear=-1;
    int arr[10];
    int enqueue(int element)
    {
        front=0;
        rear++;
        arr[rear]=element;
    }
    int dequeue(int element){
        if (front==-1&&rear==-1)
        {
        cout<<"queue empty";
        }
        int value=arr[front];
        for ( int i = 0; i <rear; i++)
        {
            arr[i]=arr[i+1];
        }
        rear--;
        return value;
        
    }
    void display(){
        int i;
         int len = sizeof(arr) / sizeof(arr[0]);
        for (int i = 0; i < len; i++) 
        {
             
        cout<<arr[i]<<"";
        
        }  
    }

    int getFront() {
        if (front == -1) {
            cout << "Queue is empty" << endl;
            return -1;
        }
        return arr[front];
    }

    int getRear() {
        if (rear == -1) {
            cout << "Queue is empty" << endl;
            return -1;
        }
        return arr[rear];
    }
    bool isEmpty(){
        if (front==-1&&rear==-1)
        {
        cout<<"queue empty";
        }
        
    }
};
int main(){
    int arr[] = { 10,20,40,60};
    int len = sizeof(arr) / sizeof(arr[0]);
    Queue marks;
    marks.enqueue(10);
    marks.enqueue(20);
    marks.enqueue(40);
    marks.display();
    cout<<"dequeue element"<<marks.dequeue(20)<<endl;
    marks.display();
    cout << "Front element: " << marks.getFront() << endl;
    cout << "Rear element: " << marks.getRear() << endl;
      cout << "empty element" << marks.isEmpty() << endl;
    
    return 0;
}
