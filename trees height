#include<iostream>
using namespace std;
class Node {
public:
    int val;
    Node *left;
    Node *right;
    
    Node(int value) {
        val = value;
        left = nullptr;
        right = nullptr;
    }
};
class Height {
public:
Node*insert(Node*root,int value){
         if (root==nullptr)
        {
            return new Node(value);
        }
  if (root->val==value)
        {
            return root;
        }
  if (root->val>value)
        {
            root->left=insert(root->left,value);
        }
     else{
           root->right=insert(root->right,value);
     }
     return root;
    }
    int getHeight(Node* root) {
        if (root == nullptr) {
            return -1;
        } else {
            int leftHeight = getHeight(root->left);
            int rightHeight = getHeight(root->right);
            return 1 + max(leftHeight, rightHeight);  
        }
    }
};
int main() {  
    Height h;
    Node* root = nullptr; 
root = h.insert(root, 10); 
root = h.insert(root, 4);
 root = h.insert(root, 6);
 root = h.insert(root, 3);
 root = h.insert(root, 12);
root = h.insert(root, 9);
    int treeHeight = h.getHeight(root);
    cout << "The height is" << treeHeight << endl;

    return 0;
}
