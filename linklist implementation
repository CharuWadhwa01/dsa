#include <iostream>
using namespace std;

class LL {
public:
    int data;
    LL *next;

    LL() {
        data = 0;
        next = NULL;
    }

    LL(int value) {
        data = value;
        next = NULL;
    }
};

class LinkedList {
public:
    LL *head;

    LinkedList() {
        head = NULL;
    }

    void insert(int data) {
        LL *new_node = new LL(data);
        if (head == NULL) {
            head = new_node;
            return;
        }
        LL *temp = head;
        while (temp->next != NULL) {
            temp = temp->next;
        }
        temp->next = new_node;
    }

    void deleteNode(int value) {
        if (head == NULL) {
            cout << "List is empty" << endl;
            return;
        }
        if (head->data == value) {
            LL *temp = head;
            head = head->next;
            delete temp;
            return;
        }
        LL *temp = head;
        while (temp->next != NULL && temp->next->data != value) {
            temp = temp->next;
        }
        if (temp->next == NULL) {
            cout << "Value not found" << endl;
            return;
        }
        LL *nodeToDelete = temp->next;
        temp->next = temp->next->next;
        delete nodeToDelete;
    }

    void deleteLast() {
        if (head == NULL) {
            cout << "List is empty" << endl;
            return;
        }
        if (head->next == NULL) {
            delete head;
            head = NULL;
            return;
        }
        LL *temp = head;
        while (temp->next->next != NULL) {
            temp = temp->next;
        }
        delete temp->next;
        temp->next = NULL;
    }

    void deletePos(int position) {
        if (head == NULL) {
            cout << "List is empty" << endl;
            return;
        }
        if (position == 0) {
            LL *temp = head;
            head = head->next;
            delete temp;
            return;
        }
        LL *temp = head;
        LL *prev = NULL;
        for (int i = 0; temp != NULL && i < position; i++) {
            prev = temp;
            temp = temp->next;
        }
        if (temp == NULL) {
            cout << "Position out of bounds" << endl;
            return;
        }
        prev->next = temp->next;
        delete temp;
    }

    void show() {
        LL *temp = head;
        while (temp != NULL) {
            cout << temp->data << " ";
            temp = temp->next;
        }
        cout << endl;
    }
};

int main() {
    LinkedList list;
    list.insert(10);
    list.insert(20);
    list.insert(30);
    list.show();

    list.deleteNode(10);
    list.show();

    list.deleteLast();
    list.show();

    list.insert(40);
    list.insert(50);
    list.show();

    list.deletePos(1);
    list.show();

    return 0;
}
